<CustomSpinnerOption>:
    background_color: 0, 0, 0.8, 1
    color: 1, 1, 1, 1
    font_size: "16sp"
    height: dp(40)
<Label>:
    color: 0.3,0.6,0.7,1
<Button>:
    background_color: .0,1,.0,.5
    color: 0,0,0,1
<Screen>:
    canvas.before:
        Color:
            rgba: 1, 1, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size

MDNavigationLayout:


    MDScreenManager:
        id : sm

        LoginScreen:
        MoodTrackerScreen:
        ResetScreen:
        SignupScreen:
        ForgotScreen:


    MDNavigationDrawer:
        enable_swiping: False if sm.current == "login_screen" or sm.current == "signup_screen" else True
        id: nav_drawer

        BoxLayout:
            orientation: "vertical"  # Layout for items inside the drawer
            spacing: "8dp"  # Spacing between items in the drawer
            padding: "8dp"  # Padding for the drawer contents

            # Label at the top of the navigation drawer
            MDLabel:
                text: "Menu"
                font_style: "H5"
                size_hint_y: None
                height: self.texture_size[1]

            # Menu items inside the navigation drawer, each with a respective screen to navigate to
            MDNavigationDrawerMenu:

                #menu items such as Chatbot, Mood Tracker, etc.
                MDNavigationDrawerItem:
                    text: "Chatbot"
                    icon: "chatbot.png"
                    md_bg_color: app.theme_cls.primary_color if app.theme_cls.theme_style == 'Light' else app.theme_cls.secondary_text_color
                    text_color: (0, 0, 0, 1) if app.theme_cls.theme_style == "Light" else (1, 1, 1, 1)
                    on_press:
                        #sm.current = "chatbot"  # Navigate to the meditation screen
                        nav_drawer.set_state("close")

                MDNavigationDrawerItem:
                    text: "Mood Tracker"
                    icon: "gauge.png"
                    md_bg_color: app.theme_cls.primary_color if app.theme_cls.theme_style == 'Light' else app.theme_cls.secondary_text_color
                    text_color: (0, 0, 0, 1) if app.theme_cls.theme_style == "Light" else (1, 1, 1, 1)
                    on_release: sm.current = "mood_screen"
                    on_release: nav_drawer.set_state("close")

                MDNavigationDrawerItem:
                    text: "Habit Tracker"
                    icon: "habits.png"
                    md_bg_color: app.theme_cls.primary_color if app.theme_cls.theme_style == 'Light' else app.theme_cls.secondary_text_color
                    text_color: (0, 0, 0, 1) if app.theme_cls.theme_style == "Light" else (1, 1, 1, 1)
                    #on_press: sm.current = "habits"
                    on_release: nav_drawer.set_state("close")

                MDNavigationDrawerItem:
                    text: "My Journal"  # Navigate to the journal screen
                    icon: "journal.png"
                    md_bg_color: app.theme_cls.primary_color if app.theme_cls.theme_style == 'Light' else app.theme_cls.secondary_text_color
                    text_color: (0, 0, 0, 1) if app.theme_cls.theme_style == "Light" else (1, 1, 1, 1)
                    on_press:
                        #sm.current = "journal"  # Navigate to the journal screen
                        nav_drawer.set_state("close")

                MDNavigationDrawerItem:
                    text: "Meditation Timer"  # Navigate to the meditation screen
                    icon: "meditation.png"
                    md_bg_color: app.theme_cls.primary_color if app.theme_cls.theme_style == 'Light' else app.theme_cls.secondary_text_color
                    text_color: (0, 0, 0, 1) if app.theme_cls.theme_style == "Light" else (1, 1, 1, 1)
                    on_release:
                        #sm.current = "meditation"  # Navigate to the meditation screen
                        nav_drawer.set_state("close")

                MDNavigationDrawerItem:
                    text: "Streaks & Rewards"  # Settings item in the menu
                    icon: "trophy.png"
                    md_bg_color: app.theme_cls.primary_color if app.theme_cls.theme_style == 'Light' else app.theme_cls.secondary_text_color
                    text_color: (0, 0, 0, 1) if app.theme_cls.theme_style == "Light" else (1, 1, 1, 1)
                    #on_press: sm.current ="rewards"
                    on_release: nav_drawer.set_state("close")

                MDNavigationDrawerItem:
                    text: "Settings"  # Settings item in the menu
                    icon: "settings.png"
                    md_bg_color: app.theme_cls.primary_color if app.theme_cls.theme_style == 'Light' else app.theme_cls.secondary_text_color
                    text_color: (0, 0, 0, 1) if app.theme_cls.theme_style == "Light" else (1, 1, 1, 1)
                    #on_press: sm.current ="settings"
                    on_release: nav_drawer.set_state("close")

                # BoxLayout at the bottom for the logout button
                BoxLayout:
                    size_hint_y: None
                    height: "50dp"

                # Logout item at the bottom of the drawer
                MDNavigationDrawerItem:
                    text: "Logout"
                    icon: "logout.png"
                    md_bg_color: app.theme_cls.primary_color if app.theme_cls.theme_style == 'Light' else app.theme_cls.secondary_text_color
                    text_color: (0, 0, 0, 1) if app.theme_cls.theme_style == "Light" else (1, 1, 1, 1)
                    on_press: sm.current ="login_screen"
                    on_press: nav_drawer.set_state("close")


<LoginScreen>:
    name: "login_screen"
    id: login_screen
    md_bg_color: root.theme_cls.bg_normal

    FloatLayout:
        MDTopAppBar:
            pos_hint: {"top": 1}
            title: "Login"

        MDLabel:
            text: "Email"
            font_style: "H6"
            pos_hint: {"center_x": 0.5, "center_y": 0.75}
            halign: "center"

        MDTextField:
            id: email
            hint_text: "Enter your email"
            size_hint_x: 0.8
            pos_hint: {"center_x": 0.5, "center_y": 0.67}
            mode: "fill"  # Try "line" or "fill" instead of "rectangle"
            helper_text_mode: "on_focus"  # Ensures hint text behaves correctly
            on_focus: if not self.focus: self.text = self.text  # Force UI update

        MDLabel:
            text: "Password"
            font_style: "H6"
            pos_hint: {"center_x": 0.5, "center_y": 0.58}
            halign: "center"

        MDTextField:
            id: password
            hint_text: "Enter your password"
            password: True
            size_hint_x: 0.8
            pos_hint: {"center_x": 0.5, "center_y": 0.5}
            mode: "fill"
            helper_text_mode: "on_focus"
            on_focus: if not self.focus: self.text = self.text

        MDRaisedButton:
            text: "Login"
            id: login_btn
            md_bg_color: 0, 0.6, 0.8, 1
            text_color: 1, 1, 1, 1
            size_hint_x: 0.5
            pos_hint: {"center_x": 0.5, "center_y": 0.38}
            on_press: root.login_btn()

        MDLabel:
            text: "Don't Have An Account?"
            font_style: "Body1"
            pos_hint: {"center_x": 0.5, "center_y": 0.3}
            halign: "center"

        MDRaisedButton:
            text: "Sign Up"
            md_bg_color: 0.1, 0.6, 0.2, 1
            text_color: 1, 1, 1, 1
            size_hint_x: 0.5
            pos_hint: {"center_x": 0.5, "center_y": 0.23}
            on_press: app.root.ids.sm.current = "signup_screen"

        MDRaisedButton:
            text: "Forgot Password?"
            md_bg_color: 0.8, 0.3, 0, 1
            text_color: 1, 1, 1, 1
            size_hint_x: 0.5
            pos_hint: {"center_x": 0.5, "center_y": 0.15}
            on_press:  app.root.ids.sm.current = "forgot_screen"



<MoodTrackerScreen>:
    md_bg_color: root.theme_cls.bg_normal
    name: "mood_screen"
    id: mood_screen

    FloatLayout:

        MDTopAppBar:

            pos_hint: {"top": 1}
            title:"Mood Tracker"
            left_action_items: [["menu", lambda x: app.root.ids.nav_drawer.set_state("open")]]

        Spinner:
            id: week_spinner
            text: "Select a Week"
            values: []
            size_hint: (0.6, 0.1)
            pos_hint: {"center_x": 0.5, "top": 0.9}
            on_text: root.plot_graph(self.text)
            background_color: 0, 0, 0.8, 1
            color: 1, 1, 1, 1
            font_size: "18sp"
            option_cls: "CustomSpinnerOption"

        BoxLayout:
            id: graph_container
            orientation: "vertical"
            size_hint: 1, 0.6
            pos_hint: {"top": 0.8}


<ResetScreen>:
    name: "reset_screen"
    md_bg_color: root.theme_cls.bg_normal


    FloatLayout:
        MDTopAppBar:
            pos_hint: {"top": 1}
            title: "Reset Your Password"
            left_action_items: [["arrow-left", lambda x: app.goto_login()]]

        MDLabel:
            text: "New Password"
            font_style: "H6"
            pos_hint: {"center_x": 0.5, "center_y": 0.75}
            halign: "center"

        MDTextField:
            id: new_password
            hint_text: "Enter new password"
            password: True
            size_hint_x: 0.8
            pos_hint: {"center_x": 0.5, "center_y": 0.67}
            mode: "fill"
            helper_text_mode: "on_focus"
            on_focus: if not self.focus: self.text = self.text

        MDLabel:
            text: "Confirm Password"
            font_style: "H6"
            pos_hint: {"center_x": 0.5, "center_y": 0.58}
            halign: "center"

        MDTextField:
            id: confirm_password
            hint_text: "Re-enter new password"
            password: True
            size_hint_x: 0.8
            pos_hint: {"center_x": 0.5, "center_y": 0.5}
            mode: "fill"
            helper_text_mode: "on_focus"
            on_focus: if not self.focus: self.text = self.text

        MDRaisedButton:
            text: "Reset Password"
            md_bg_color: 0, 0.6, 0.8, 1
            text_color: 1, 1, 1, 1
            size_hint_x: 0.5
            pos_hint: {"center_x": 0.5, "center_y": 0.35}
            on_release: root.reset_password()

<ForgotScreen>:
    name: "forgot_screen"
    md_bg_color: root.theme_cls.bg_normal

    FloatLayout:
    MDTopAppBar:
        pos_hint: {"top": 1}
        title: "Reset Password"
        left_action_items: [["arrow-left", lambda x: app.goto_login()]]

    MDLabel:
        text: "Email"
        font_style: "H6"
        pos_hint: {"center_x": 0.5, "center_y": 0.85}
        halign: "center"

    MDTextField:
        id: f_email
        hint_text: "Enter your email"
        size_hint_x: 0.8
        pos_hint: {"center_x": 0.5, "center_y": 0.75}
        mode: "fill"
        helper_text_mode: "on_focus"
        on_focus: if not self.focus: self.text = self.text

    MDLabel:
        text: "Security Question: What is the name of your birthplace?"
        font_style: "H6"
        size_hint_x: 0.8
        pos_hint: {"center_x": 0.5, "center_y": 0.6}
        halign: "center"

    MDTextField:
        id: f_security
        hint_text: "Enter your answer"
        size_hint_x: 0.8
        pos_hint: {"center_x": 0.5, "center_y": 0.5}
        mode: "fill"
        helper_text_mode: "on_focus"
        on_focus: if not self.focus: self.text = self.text

    MDRaisedButton:
        text: "Reset Password"
        md_bg_color: 1, 0, 0, 1
        text_color: 1, 1, 1, 1
        size_hint_x: 0.5
        pos_hint: {"center_x": 0.5, "center_y": 0.35}
        on_press: root.verify_security()


<SignupScreen>:
    name: "signup_screen"
    md_bg_color: root.theme_cls.bg_normal

    FloatLayout:
        MDTopAppBar:
            pos_hint: {"top": 1}
            title: "Sign Up"
            left_action_items: [["arrow-left", lambda x: app.goto_login()]]

        MDLabel:
            text: "First Name"
            font_style: "H6"
            pos_hint: {"center_x": 0.5, "center_y": 0.88}
            halign: "center"

        MDTextField:
            id: fname
            hint_text: "Enter your first name"
            size_hint_x: 0.8
            pos_hint: {"center_x": 0.5, "center_y": 0.8}
            mode: "fill"
            helper_text_mode: "on_focus"
            on_focus: if not self.focus: self.text = self.text

        MDLabel:
            text: "Last Name"
            font_style: "H6"
            pos_hint: {"center_x": 0.5, "center_y": 0.72}
            halign: "center"

        MDTextField:
            id: lname
            hint_text: "Enter your last name"
            size_hint_x: 0.8
            pos_hint: {"center_x": 0.5, "center_y": 0.64}
            mode: "fill"
            helper_text_mode: "on_focus"
            on_focus: if not self.focus: self.text = self.text

        MDLabel:
            text: "Email"
            font_style: "H6"
            pos_hint: {"center_x": 0.5, "center_y": 0.56}
            halign: "center"

        MDTextField:
            id: up_email
            hint_text: "Enter your email"
            size_hint_x: 0.8
            pos_hint: {"center_x": 0.5, "center_y": 0.48}
            mode: "fill"
            helper_text_mode: "on_focus"
            on_focus: if not self.focus: self.text = self.text

        MDLabel:
            text: "Password"
            font_style: "H6"
            pos_hint: {"center_x": 0.5, "center_y": 0.4}
            halign: "center"

        MDTextField:
            id: up_password
            hint_text: "Enter your password"
            password: True
            size_hint_x: 0.8
            pos_hint: {"center_x": 0.5, "center_y": 0.32}
            mode: "fill"
            helper_text_mode: "on_focus"
            on_focus: if not self.focus: self.text = self.text

        MDLabel:
            text: "Security Question: What is the name of your birthplace?"
            font_style: "Body1"
            size_hint_x: 0.8
            pos_hint: {"center_x": 0.5, "center_y": 0.24}
            halign: "center"

        MDTextField:
            id: security_ans
            hint_text: "Enter your answer"
            size_hint_x: 0.8
            pos_hint: {"center_x": 0.5, "center_y": 0.16}
            mode: "fill"
            helper_text_mode: "on_focus"
            on_focus: if not self.focus: self.text = self.text

        MDRaisedButton:
            text: "Sign Up"
            md_bg_color: 0, 0.6, 0.8, 1
            text_color: 1, 1, 1, 1
            size_hint_x: 0.5
            pos_hint: {"center_x": 0.5, "center_y": 0.06}
            on_press: root.up_btn()
